---
title: "ML"
author: "Maheedhar kolli"
date: "2022-10-27"
output:
  html_document: default
  pdf_document: default
---




4
(a)

```{r}
library(class)
library(MASS)
set.seed(2000)
mu1=c(2,1)
mu2=c(1,2)
sigma1 <- diag(2)
sigma2<-diag(2)
train_green<-mvrnorm(100,mu1,sigma1)
train_red<-mvrnorm(100,mu2,sigma2)
data_train<-rbind(train_green,train_red)
train_data<-data.frame(data_train)
#train_data["Y"]<-c(rep(1,))
train_data12<-data.frame(data_train)

test_green<-mvrnorm(500,mu1,sigma1)
test_red<-mvrnorm(500,mu2,sigma2)

data_test=rbind(test_green,test_red)
data_test=data.frame(data_test)

data_test["Y"]=c(rep(1,500),rep(0,500))

train_data["Y"]=c(rep(1,100),rep(0,100))
train_data12<-data.frame(train_data)
cl <- factor(c(rep(1,100),rep(0,100)))
cl1=factor(c(rep(1,500),rep(0,500)))
knn=list(1, 4, 7, 10, 13, 16, 30, 45, 60, 80, 100, 150, 200)
knn1=c(1, 4, 7, 10, 13, 16, 30, 45, 60, 80, 100, 150, 200)

df1 = data.frame()
train_err=c()
test_err=c()
traindata=subset(train_data,select=-c(Y))
testdata=subset(data_test,select=-c(Y))

for (x in knn) {
myknn <- knn(traindata, testdata, cl, k = x, prob=TRUE)
myknn1 <- knn(train_data, train_data, cl, k = x, prob=TRUE)
trainerr<- mean(myknn1!=cl)
testerr3 <- mean(myknn!=cl1)
output = c(x,trainerr, testerr3)
df1 = rbind(df1, output)

train_err=append(train_err,trainerr)
test_err=append(test_err,testerr3)
}
colnames(df1)<-c("k","Train Error", "Test Error")
df1

n=200/knn1
plot(n,train_err,xlab="Degrees of freedom", ylab="Train and test",main="K-number of nearest neighbours",type="o",col='green')
points(n,test_err,pch=19,type="o",col="red")
```

(b)
```{r}
library(MASS)
#generate ten centers, which are treated as fixed parameters
Sig <- matrix(c(1,0,0,1),nrow=2)
seed_center <- 16
set.seed(seed_center)
center_green <- mvrnorm(n=10,c(1,0),Sig)
center_red <- mvrnorm(n=10,c(0,1),Sig)
##define a function "gendata2" first
gendata2 <-function(n,mu1,mu2,Sig1,Sig2,myseed)
{
set.seed(myseed)
mean1 <- mu1[sample(1:10,n,replace=T),]
mean2 <- mu2[sample(1:10,n,replace=T),]
green <- matrix(0,ncol=2,nrow=n)
red <- matrix(0,ncol=2,nrow=n)
for(i in 1:n){
green[i,] <- mvrnorm(1,mean1[i,],Sig1)
red[i,] <- mvrnorm(1,mean2[i,],Sig2)
}
x <- rbind(green,red)
return(x)
}
#generate the training set
seed_train <- 2000
ntrain <- 100
train2 <- gendata2(ntrain,center_green,center_red,Sig/5,Sig/5,seed_train)
ytrain <- c(rep(1,ntrain),rep(0,ntrain))
train2_data=data.frame(train2)
r=length(train2)

#test

seed=2014
gendata2 <-function(n,mu1,mu2,Sig1,Sig2,seed)
{
set.seed(seed)
mean1 <- mu1[sample(1:10,n,replace=T),]
mean2 <- mu2[sample(1:10,n,replace=T),]
green <- matrix(0,ncol=2,nrow=n)
red <- matrix(0,ncol=2,nrow=n)
for(i in 1:n){
green[i,] <- mvrnorm(1,mean1[i,],Sig1)
red[i,] <- mvrnorm(1,mean2[i,],Sig2)
}
x <- rbind(green,red)
return(x)
}
seed_test <- 2000
ntest <- 500
test2 <- gendata2(ntest,center_green,center_red,Sig/5,Sig/5,seed_test)
ytest <- c(rep(1,ntest),rep(0,ntest))

test2_data=data.frame(test2)
train_err1=c()
test_err1=c()
#print(test2_data)
#knn
#traindata=subset(train2_data,select=-c(Y))
#testdata=subset(test2_data,select=-c(Y))
df2=data.frame()
cl <- factor(c(rep(1,ntrain),rep(0,ntrain)))
cl1=factor( c(rep(1,ntest),rep(0,ntest)))
for (x in knn) {
myknn1 <- knn(train2_data, test2_data, cl, k = x, prob=TRUE)
myknn12 <- knn(train2_data, train2_data, cl, k = x, prob=TRUE)
trainerr1<- mean(myknn12!=cl)
testerr32 <- mean(myknn1!=cl1)
output1 = c(x,trainerr1, testerr32)
df2 = rbind(df2, output1)
train_err1=append(train_err1,trainerr1)
test_err1=append(test_err1,testerr32)
}
colnames(df2)<-c("k","Train Error", "Test Error")

df2
n=200/knn1
plot(n,train_err1,xlab="Degrees of freedom", ylab="Train and test",main="K-number of nearest neighbours",type="o",col='green')
points(n,test_err1,pch=19,type="o",col="red")

```

5

(a)

```{r}
zipcode=read.table(file="C:/Users/ual-laptop/Downloads/zip.train.gz")
zipcode_train=data.frame(zipcode)
zipcode1=read.table(file="C:/Users/ual-laptop/Downloads/zip.test.gz")
zipcode_test=data.frame(zipcode1)
#zipcode_test

zipcode_train1 <- subset(zipcode_train, V1 >0 & V1<=3)
zipcode_test1 <- subset(zipcode_test, V1 >0 & V1<=3)
traindata_zip=zipcode_train1[,2:257]
testdata_zip=zipcode_test1[,2:257]


#zipcode_train1[1]
k=c( 1, 3, 5, 7, 15)
cl2 <-zipcode_train1[,1]
cl1=zipcode_test1[,1]
df3=data.frame()
train_err2=c()
test_err2=c()
for (x in k) {
myknn1 <- knn(traindata_zip, testdata_zip, cl2, k = x, prob=TRUE)
myknn12 <- knn(traindata_zip, traindata_zip, cl2, k = x, prob=TRUE)
trainerr12<- mean(myknn12!=cl2)
testerr322 <- mean(myknn1!=cl1)
output1 = c(x,trainerr12, testerr322)

df3 = rbind(df3, output1)
train_err2=append(train_err2,trainerr12)
test_err2=append(test_err2,testerr322)
}
colnames(df3)<-c("k","Train Error", "Test Error")
df3

```

(b)

```{r}
ziptrain=subset(zipcode_train1,select=-c(V17))
ziptest=subset(zipcode_test1,select=-c(V17))


lda.fit = lda(V1~.,data=ziptrain)
lda_pred=predict(lda.fit,newdata=ziptrain)$class
lda_pred1=data.frame(lda_pred)

train_err=mean(lda_pred1 != ziptrain$V1)
train_err
lda_pred2=data.frame(predict(lda.fit,newdata=ziptest)$class)

test_err=mean(lda_pred2 != ziptest$V1)
test_err

```

6.
(a)

```{r}

y=c(1:20)#y+20
z=c(101:120)#z+20
x1=c(1:200)
r=0
list2=c()

b=append(y,z)
listx=c()
for (i in 1:5){

test=train_data12[b,]
r=r+20
train=train_data12[which(x1!=b),]
lda.fit1 = lda(Y~.,data=train)
lda_pred2=predict(lda.fit1,newdata=test)$class
lda_pred12=data.frame(lda_pred2)

train_err=mean(lda_pred12 != test$Y)
print(train_err)
listx=append(listx,train_err)

lr.fit=glm(Y~.,train,family="binomial")

lr_pred=predict(lr.fit,newdata=test)
lr_pred1=data.frame(lr_pred)

lr_pred12=ifelse(lr_pred1>0, 1, 0)

train_err_lr=mean(lr_pred12 != test$Y)
list2=append(list2,train_err_lr)
b=append(y,z)+r
}
cross_err_lg=mean(list2)
cross_err=mean(listx)
listx
list2
print(paste("LDA crossvalidation error",cross_err))
print(paste("logistic crossvalidation error",cross_err_lg))


```
